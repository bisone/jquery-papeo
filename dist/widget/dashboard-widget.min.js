/*! iFrame Resizer (iframeSizer.contentWindow.min.js) - v2.6.1 - 2014-09-03
 *  Desc: Include this file in any page being loaded into an iframe
 *        to force the iframe to resize to the content size.
 *  Requires: iframeResizer.min.js on host page.
 *  Copyright: (c) 2014 David J. Bradshaw - dave@bradshaw.net
 *  License: MIT
 */

!function(){"use strict";function a(a,b,c){"addEventListener"in window?a.addEventListener(b,c,!1):"attachEvent"in window&&a.attachEvent("on"+b,c)}function b(a){return $+"["+ab+"] "+a}function c(a){Z&&"object"==typeof window.console&&console.log(b(a))}function d(a){"object"==typeof window.console&&console.warn(b(a))}function e(){c("Initialising iFrame"),f(),i(),h("background",L),h("padding",O),o(),m(),j(),p(),n(),D("init","Init message from host page")}function f(){function a(a){return"true"===a?!0:!1}var b=X.substr(_).split(":");ab=b[0],M=void 0!==b[1]?Number(b[1]):M,P=void 0!==b[2]?a(b[2]):P,Z=void 0!==b[3]?a(b[3]):Z,Y=void 0!==b[4]?Number(b[4]):Y,bb=void 0!==b[5]?a(b[5]):bb,J=void 0!==b[6]?a(b[6]):J,N=b[7],V=void 0!==b[8]?b[8]:V,L=b[9],O=b[10],fb=void 0!==b[11]?Number(b[11]):fb}function g(a,b){return-1!==b.indexOf("-")&&(d("Negative CSS value ignored for "+a),b=""),b}function h(a,b){void 0!==b&&""!==b&&"null"!==b&&(document.body.style[a]=b,c("Body "+a+' set to "'+b+'"'))}function i(){void 0===N&&(N=M+"px"),g("margin",N),h("margin",N)}function j(){document.documentElement.style.height="",document.body.style.height="",c('HTML & body height set to "auto"')}function k(){a(window,"resize",function(){D("resize","Window resized")})}function l(){a(window,"click",function(){D("click","Window clicked")})}function m(){U!==V&&(V in jb||(d(V+" is not a valid option for heightCalculationMethod."),V="bodyScroll"),c('Height calculation method set to "'+V+'"'))}function n(){!0===J?(k(),l(),s()):c("Auto Resize disabled")}function o(){var a=document.createElement("div");a.style.clear="both",a.style.display="block",document.body.appendChild(a)}function p(){bb&&(c("Enable public methods"),window.parentIFrame={close:function(){D("close","parentIFrame.close()",0,0)},getId:function(){return ab},reset:function(){G("parentIFrame.size")},scrollTo:function(a,b){H(b,a,"scrollTo")},sendMessage:function(a,b){H(0,0,"message",a,b)},setHeightCalculationMethod:function(a){V=a,m()},setTargetOrigin:function(a){c("Set targetOrigin: "+a),db=a},size:function(a,b){var c=""+(a?a:"")+(b?","+b:"");E(),D("size","parentIFrame.size("+c+")",a,b)}})}function q(){0!==Y&&(c("setInterval: "+Y+"ms"),setInterval(function(){D("interval","setInterval: "+Y)},Math.abs(Y)))}function r(b){function d(b){(void 0===b.height||void 0===b.width||0===b.height||0===b.width)&&(c("Attach listerner to "+b.src),a(b,"load",function(){D("imageLoad","Image loaded")}))}b.forEach(function(a){if("attributes"===a.type&&"src"===a.attributeName)d(a.target);else if("childList"===a.type){var b=a.target.querySelectorAll("img");Array.prototype.forEach.call(b,function(a){d(a)})}})}function s(){function a(){var a=document.querySelector("body"),d={attributes:!0,attributeOldValue:!1,characterData:!0,characterDataOldValue:!1,childList:!0,subtree:!0},e=new b(function(a){D("mutationObserver","mutationObserver: "+a[0].target+" "+a[0].type),r(a)});c("Enable MutationObserver"),e.observe(a,d)}var b=window.MutationObserver||window.WebKitMutationObserver;b?0>Y?q():a():(d("MutationObserver not supported in this browser!"),q())}function t(){function a(a){function b(a){var b=/^\d+(px)?$/i;if(b.test(a))return parseInt(a,K);var d=c.style.left,e=c.runtimeStyle.left;return c.runtimeStyle.left=c.currentStyle.left,c.style.left=a||0,a=c.style.pixelLeft,c.style.left=d,c.runtimeStyle.left=e,a}var c=document.body,d=0;return"defaultView"in document&&"getComputedStyle"in document.defaultView?(d=document.defaultView.getComputedStyle(c,null),d=null!==d?d[a]:0):d=b(c.currentStyle[a]),parseInt(d,K)}return document.body.offsetHeight+a("marginTop")+a("marginBottom")}function u(){return document.body.scrollHeight}function v(){return document.documentElement.offsetHeight}function w(){return document.documentElement.scrollHeight}function x(){for(var a=document.querySelectorAll("body *"),b=a.length,d=0,e=(new Date).getTime(),f=0;b>f;f++)a[f].getBoundingClientRect().bottom>d&&(d=a[f].getBoundingClientRect().bottom);return e=(new Date).getTime()-e,c("Parsed "+b+" HTML elements"),c("LowestElement bottom position calculated in "+e+"ms"),d}function y(){return[t(),u(),v(),w()]}function z(){return Math.max.apply(null,y())}function A(){return Math.min.apply(null,y())}function B(){return Math.max(t(),x())}function C(){return Math.max(document.documentElement.scrollWidth,document.body.scrollWidth)}function D(a,b,d,e){function f(){a in{reset:1,resetPage:1,init:1}||c("Trigger event: "+b)}function g(){S=n,ib=o,H(S,ib,a)}function h(){return gb&&a in Q}function i(){function a(a,b){var c=Math.abs(a-b)<=fb;return!c}return n=void 0!==d?d:jb[V](),o=void 0!==e?e:C(),a(S,n)||P&&a(ib,o)}function j(){return!(a in{init:1,interval:1,size:1})}function k(){return V in cb}function l(){c("No change in size detected")}function m(){j()&&k()?G(b):a in{interval:1}||(f(),l())}var n,o;h()?c("Trigger event cancelled: "+a):i()?(f(),E(),g()):m()}function E(){gb||(gb=!0,c("Trigger event lock on")),clearTimeout(hb),hb=setTimeout(function(){gb=!1,c("Trigger event lock off"),c("--")},R)}function F(a){S=jb[V](),ib=C(),H(S,ib,a)}function G(a){var b=V;V=U,c("Reset trigger event: "+a),E(),F("reset"),V=b}function H(a,b,d,e,f){function g(){void 0===f?f=db:c("Message targetOrigin: "+f)}function h(){var g=a+":"+b,h=ab+":"+g+":"+d+(void 0!==e?":"+e:"");c("Sending message to host page ("+h+")"),eb.postMessage($+h,f)}g(),h()}function I(a){function b(){return $===(""+a.data).substr(0,_)}function f(){X=a.data,eb=a.source,e(),T=!1,setTimeout(function(){W=!1},R)}function g(){W?c("Page reset ignored by init"):(c("Page size reset by host page"),F("resetPage"))}function h(){return a.data.split("]")[1]}function i(){return"iFrameResize"in window}function j(){return a.data.split(":")[2]in{"true":1,"false":1}}b()&&(T&&j()?f():"reset"===h()?g():a.data===X||i()||d("Unexpected message ("+a.data+")"))}var J=!0,K=10,L="",M=0,N="",O="",P=!1,Q={resize:1,click:1},R=128,S=1,T=!0,U="offset",V=U,W=!0,X="",Y=32,Z=!1,$="[iFrameSizer]",_=$.length,ab="",bb=!1,cb={max:1,scroll:1,bodyScroll:1,documentElementScroll:1},db="*",eb=window.parent,fb=0,gb=!1,hb=null,ib=1,jb={offset:t,bodyOffset:t,bodyScroll:u,documentElementOffset:v,scroll:w,documentElementScroll:w,max:z,min:A,grow:z,lowestElement:B};a(window,"message",I)}();
//# sourceMappingURL=../src/iframeResizer.contentWindow.map
/*! iFrame Resizer (iframeSizer.min.js ) - v2.6.1 - 2014-09-03
 *  Desc: Force cross domain iframes to size to content.
 *  Requires: iframeResizer.contentWindow.min.js to be loaded into the target frame.
 *  Copyright: (c) 2014 David J. Bradshaw - dave@bradshaw.net
 *  License: MIT
 */

!function(){"use strict";function a(a,b,c){"addEventListener"in window?a.addEventListener(b,c,!1):"attachEvent"in window&&a.attachEvent("on"+b,c)}function b(){var a,b=["moz","webkit","o","ms"];for(a=0;a<b.length&&!w;a+=1)w=window[b[a]+"RequestAnimationFrame"];w||c(" RequestAnimationFrame not supported")}function c(a){y.log&&"object"==typeof console&&console.log(s+"[Host page"+u+"]"+a)}function d(a){function b(){function a(){h(z),f(),y.resizedCallback(z)}i(a,z,"resetPage")}function d(a){var b=a.id;c(" Removing iFrame: "+b),a.parentNode.removeChild(a),y.closedCallback(b),c(" --")}function e(){var a=x.substr(t).split(":");return{iframe:document.getElementById(a[0]),id:a[0],height:a[1],width:a[2],type:a[3]}}function j(a){var b=Number(y["max"+a]),d=Number(y["min"+a]),e=a.toLowerCase(),f=Number(z[e]);if(d>b)throw new Error("Value for min"+a+" can not be greater than max"+a);c(" Checking "+e+" is in range "+d+"-"+b),d>f&&(f=d,c(" Set "+e+" to min value")),f>b&&(f=b,c(" Set "+e+" to max value")),z[e]=""+f}function k(){var b=a.origin,d=z.iframe.src.split("/").slice(0,3).join("/");if(y.checkOrigin&&(c(" Checking connection is from: "+d),""+b!="null"&&b!==d))throw new Error("Unexpected message received from: "+b+" for "+z.iframe.id+". Message was: "+a.data+". This error can be disabled by adding the checkOrigin: false option.");return!0}function l(){return s===(""+x).substr(0,t)}function m(){var a=z.type in{"true":1,"false":1};return a&&c(" Ignoring init message from meta parent page"),a}function n(){var a=x.substr(x.indexOf(":")+r+6);c(" MessageCallback passed: {iframe: "+z.iframe.id+", message: "+a+"}"),y.messageCallback({iframe:z.iframe,message:a}),c(" --")}function o(){if(null===z.iframe)throw new Error("iFrame ("+z.id+") does not exist on "+u);return!0}function q(){c(" Reposition requested from iFrame"),v={x:z.width,y:z.height},f()}function w(){switch(z.type){case"close":d(z.iframe),y.resizedCallback(z);break;case"message":n();break;case"scrollTo":q();break;case"reset":g(z);break;case"init":b(),y.initCallback(z.iframe);break;default:b()}}var x=a.data,z={};l()&&(c(" Received: "+x),z=e(),j("Height"),j("Width"),!m()&&o()&&k()&&(w(),p=!1))}function e(){null===v&&(v={x:void 0!==window.pageXOffset?window.pageXOffset:document.documentElement.scrollLeft,y:void 0!==window.pageYOffset?window.pageYOffset:document.documentElement.scrollTop},c(" Get position: "+v.x+","+v.y))}function f(){null!==v&&(window.scrollTo(v.x,v.y),c(" Set position: "+v.x+","+v.y),v=null)}function g(a){function b(){h(a),j("reset","reset",a.iframe)}c(" Size reset requested by "+("init"===a.type?"host page":"iFrame")),e(),i(b,a,"init")}function h(a){function b(b){a.iframe.style[b]=a[b]+"px",c(" IFrame ("+a.iframe.id+") "+b+" set to "+a[b]+"px")}y.sizeHeight&&b("height"),y.sizeWidth&&b("width")}function i(a,b,d){d!==b.type&&w?(c(" Requesting animation frame"),w(a)):a()}function j(a,b,d){c("["+a+"] Sending msg to iframe ("+b+")"),d.contentWindow.postMessage(s+b,"*")}function k(){function b(){function a(a){1/0!==y[a]&&0!==y[a]&&(k.style[a]=y[a]+"px",c(" Set "+a+" = "+y[a]+"px"))}a("maxHeight"),a("minHeight"),a("maxWidth"),a("minWidth")}function d(a){return""===a&&(k.id=a="iFrameResizer"+o++,c(" Added missing iframe ID: "+a+" ("+k.src+")")),a}function e(){c(" IFrame scrolling "+(y.scrolling?"enabled":"disabled")+" for "+l),k.style.overflow=!1===y.scrolling?"hidden":"auto",k.scrolling=!1===y.scrolling?"no":"yes"}function f(){("number"==typeof y.bodyMargin||"0"===y.bodyMargin)&&(y.bodyMarginV1=y.bodyMargin,y.bodyMargin=""+y.bodyMargin+"px")}function h(){return l+":"+y.bodyMarginV1+":"+y.sizeWidth+":"+y.log+":"+y.interval+":"+y.enablePublicMethods+":"+y.autoResize+":"+y.bodyMargin+":"+y.heightCalculationMethod+":"+y.bodyBackground+":"+y.bodyPadding+":"+y.tolerance}function i(b){a(k,"load",function(){var a=p;j("iFrame.onload",b,k),!a&&y.heightCalculationMethod in x&&g({iframe:k,height:0,width:0,type:"init"})}),j("init",b,k)}var k=this,l=d(k.id);e(),b(),f(),i(h())}function l(a){if("object"!=typeof a)throw new TypeError("Options is not an object.")}function m(){function a(a){if("IFRAME"!==a.tagName.toUpperCase())throw new TypeError("Expected <IFRAME> tag, found <"+a.tagName+">.");k.call(a)}function b(a){a=a||{},l(a);for(var b in z)z.hasOwnProperty(b)&&(y[b]=a.hasOwnProperty(b)?a[b]:z[b])}return function(c,d){b(c),Array.prototype.forEach.call(document.querySelectorAll(d||"iframe"),a)}}function n(a){a.fn.iFrameResize=function(b){return b=b||{},l(b),y=a.extend({},z,b),this.filter("iframe").each(k).end()}}var o=0,p=!0,q="message",r=q.length,s="[iFrameSizer]",t=s.length,u="",v=null,w=window.requestAnimationFrame,x={max:1,scroll:1,bodyScroll:1,documentElementScroll:1},y={},z={autoResize:!0,bodyBackground:null,bodyMargin:null,bodyMarginV1:8,bodyPadding:null,checkOrigin:!0,enablePublicMethods:!1,heightCalculationMethod:"offset",interval:32,log:!1,maxHeight:1/0,maxWidth:1/0,minHeight:0,minWidth:0,scrolling:!1,sizeHeight:!0,sizeWidth:!1,tolerance:0,closedCallback:function(){},initCallback:function(){},messageCallback:function(){},resizedCallback:function(){}};b(),a(window,"message",d),"jQuery"in window&&n(jQuery),"function"==typeof define&&define.amd?define(function(){return m()}):window.iFrameResize=m()}();
//# sourceMappingURL=../src/iframeResizer.map
/**
 * comboMenu控件
 * 
 * @author yinjiabin
 */
(function($) {

	function init($target) {

		var options = $target.data('comboMenu').options;
		var data = processData(options.data, options.hasAllData);
		var $popArr = new Array();

		createCombo();
		createPop0();
		createOtherPops();
		if (options.addParentAndLevel) {
			addParentAndLevel(data, null, 0);
		}
		$target.data("comboMenuData", data);
		$target.data("popArr", $popArr);
		changeValue($target, findSelectedValue(data, ""));

		/**
		 * 创建combo
		 */
		function createCombo() {

			$target.addClass("comboMenu in");

			var $prefix = $('<span class="prefix"></span>');
			var $cmbTxt = $('<a href="javascript:void(0);" class="comboMenu_text"></a>');
			var $arrowIn = $('<span class="arrow in" style=""></span>');

			$target.append($prefix).append($cmbTxt).append($arrowIn);

			$target.height(options.height);
			$target.width(options.width);

			$prefix.css("padding-top", (options.height - 21) / 2);
			$cmbTxt.css("padding-top", (options.height - 21) / 2);

			if (options.title && options.title.length > 0) {
				$prefix.append(options.title + ": ");
			}

			$cmbTxt.width($target.width() - $prefix.width() - 30);
			// 因为$cmbTxt的padding-top 和 padding-left的和为6
			$cmbTxt.height(options.height - 6);

			$arrowIn.css("margin-top", (options.height - 25) / 2);

			$cmbTxt.bind("click", function() {
				comboClick($target);
			});
			$arrowIn.bind("click", function() {
				comboClick($target);
			});
		}

		/**
		 * 创建pop0
		 */
		function createPop0() {

			var $pop0 = $('<div class="popup popup_0" index="0" style="display: none;"></div></div>');

			$popArr.push($pop0);

			$pop0.width(options.width + 2);
			$pop0.css("top", options.height);

			$target.append($pop0);

			var $searchDiv = $('<div class="comboMenu_search"><span class="prefix">搜索:</span><input type="text" log="search_cate"><span class="cf"></span></div><div class="search-bottom"></div><div class="popup_wrap"></div>');
			$pop0.append($searchDiv);

			var $search = $pop0.find("[log=search_cate]");
			$search.bind("input protertychange", function(e) {
				searchChanged(e, $target);
			});
			$search.width(options.width - 68);

			if (options.useSearch == false) {
				$searchDiv.each(function() {
					$(this).hide();
				});
			}

			$pop0.append('<div class="popuplist"></div>');
		}

		/**
		 * 创建pop1-pop4
		 */
		function createOtherPops() {

			if (!options.popWidth) {
				options.popWidth = options.width;
			}
			var showTop = options.height;

			if (options.useSearch) {
				showTop = showTop + 34;
			}

			var $pop1 = $('<div class="popup popup_1" index="1" style="display: none;"><div class="popuplist" style="height: auto;"></div></div>');
			var $pop2 = $('<div class="popup popup_2" index="2" style="display: none;"><div class="popuplist" style="height: auto;"></div></div>');
			var $pop3 = $('<div class="popup popup_3" index="3" style="display: none;"><div class="popuplist" style="height: auto;"></div></div>');
			var $pop4 = $('<div class="popup popup_4" index="4" style="display: none;"><div class="popuplist" style="height: auto;"></div></div>');

			$popArr.push($pop1);
			$popArr.push($pop2);
			$popArr.push($pop3);
			$popArr.push($pop4);

			$target.append($pop1);
			$target.append($pop2);
			$target.append($pop3);
			$target.append($pop4);

			$pop1.css("left", options.width);
			$pop1.css("_margin-left", options.width); // 兼容IE6
			$pop1.css("width", options.popWidth);
			$pop1.css("top", showTop);

			$pop2.css("left", options.width + options.popWidth - 1);
			$pop2.css("_margin-left", options.width + options.popWidth - 1); // 兼容IE6
			$pop2.css("width", options.popWidth);
			$pop2.css("top", showTop);

			$pop3.css("left", options.width + options.popWidth + options.popWidth - 2);
			$pop3.css("_margin-left", options.width + options.popWidth + options.popWidth - 2); // 兼容IE6
			$pop3.css("width", options.popWidth);
			$pop3.css("top", showTop);

			$pop4.css("left", options.width + options.popWidth + options.popWidth + options.popWidth - 3);
			$pop4.css("_margin-left", options.width + options.popWidth + options.popWidth + options.popWidth - 3); // 兼容IE6
			$pop4.css("width", options.popWidth);
			$pop4.css("top", showTop);
		}
	}

	/**
	 * 点击combo的事件，需要弹出pop0
	 */
	function comboClick($target) {

		var options = $target.data('comboMenu').options;
		var $popArr = $target.data("popArr");

		if ($popArr[0].css("display") == "none") {
			$popArr[0].find("[log=search_cate]").val("");
			if (options.onShow) {
				var result = options.onShow();
				if (result == false) {
					return;
				}
			}

			var data = $target.data("comboMenuData");

			addMenuItem($target, $popArr[0].find(".popuplist"), data);
			selectValueByLevel($target, 0);
			$popArr[0].show();

			$(document).unbind("click", comboMenuOuterClick);
			$(document).bind("click", comboMenuOuterClick);

		} else {
			$popArr[0].find("[log=search_cate]").val("");
			hideSubPopFrom($target, 0);
		}
		if (options.onClick) {
			options.onClick();
		}
	}

	/**
	 * 检索事件
	 */
	function searchChanged(e, $target) {

		var data = $target.data("comboMenuData");

		if (!data) {
			return;
		}
		var newValue = e.target.value;
		var $popArr = $target.data("popArr");
		var $popuplist = $popArr[0].find(".popuplist");
		if (newValue && newValue != "") {
			var findList = new Array();
			hideSubPopFrom($target, 1);
			findSearchList(e.target.value, data, findList);
			$popuplist.empty();
			addMenuItem($target, $popuplist, findList, true);
		} else {
			$popuplist.empty();
			addMenuItem($target, $popuplist, data);
		}
		selectValueByLevel($target, 0);
	}

	/**
	 * 查找符合条件的数据
	 */
	function findSearchList(val, levData, findList) {

		for (var i = 0; i < levData.length; i++) {

			var tmpData = levData[i];
			if (tmpData.text && tmpData.text.replace(/ /g, "").toLowerCase().indexOf(val.replace(/ /g, "").toLowerCase()) >= 0) {
				findList.push(tmpData);
			}

			if (tmpData.children && tmpData.children.length > 0) {
				findSearchList(val, tmpData.children, findList);
			}
		}
	}

	/**
	 * 给popuplist添加数据。
	 */
	function addMenuItem($target, $popuplist, dataList, isUserParent) {

		var options = $target.data('comboMenu').options;
		var $popArr = $target.data("popArr");

		if (!dataList) {
			return;
		}

		for (var i = 0; i < dataList.length; i++) {
			var $menuItem = $('<a href="javascript:void(0);" class="comboItem"></a>');
			var itemData = dataList[i];
			if (itemData.children && itemData.children.length > 0) {
				$menuItem.addClass("hasLeaf");
			}
			if (isUserParent) {
				$menuItem.append(getDataString(itemData, options.joinStr));
			} else {
				$menuItem.append(itemData.text);
			}
			$menuItem.data("itemData", itemData);
			$menuItem.attr("keyValue", itemData.value);

			// 绑定click事件
			$menuItem.bind('click', function() {
				var $item = $(this);
				var itemData = $item.data("itemData");

				if (!options.allLeafCanSelect && itemData.children && itemData.children.length > 0) {
					return;
				}
				changeValue($target, itemData);
				hideSubPopFrom($target, 0);
			});

			// 绑定mouseover事件
			$menuItem.bind('mouseover', function() {
				var $item = $(this);
				var itemData = $item.data("itemData");

				var level = parseInt($item.parents(".popup").attr("index")) + 1;

				hideSubPopFrom($target, level);

				if (itemData.children && itemData.children.length > 0) {
					addMenuItem($target, $popArr[level].find(".popuplist"), itemData.children);
					selectValueByLevel($target, level);
					$popArr[level].show();
				}
			});

			$popuplist.append($menuItem);
		}
	}

	/**
	 * 给参数data加上parent，以便于在查找的时候，能够找到parent，以显示出text的路径。
	 * 给参数data加上level，以便在处理的时候知道先把的条目的级别。
	 * 
	 * @author yinjiabin
	 */
	function addParentAndLevel(curDataArr, parent, level) {

		if (!curDataArr) {
			return;
		}

		for (var i = 0; i < curDataArr.length; i++) {
			var tmpData = curDataArr[i];
			tmpData.parent = parent;
			tmpData.level = level;
			if (tmpData.children && tmpData.children.length > 0) {
				addParentAndLevel(tmpData.children, tmpData, level + 1);
			}
		}
	}

	/**
	 * 从level级开始隐藏pop。level后的pop都会被隐藏
	 */
	function hideSubPopFrom($target, level) {

		var options = $target.data('comboMenu').options;
		var $popArr = $target.data("popArr");

		if (level == 0 && options.onHide) {
			options.onHide();
		}

		for (var i = level; i < $popArr.length; i++) {
			hideSubPop($popArr[i]);
		}
	}

	/**
	 * 隐藏pop
	 */
	function hideSubPop($pop) {
		var $list = $pop.find(".popuplist");
		$pop.hide();
		$list.empty();
	}

	/**
	 * 根据当前的选择值，选中级别为level的pop中的item条目，以加上class
	 */
	function selectValueByLevel($target, level) {

		var $popArr = $target.data("popArr");

		$popArr[level].find(".current").removeClass("current");

		var curValue = $target.data("selectedValue");

		if (!curValue) {
			return;
		}
		var resultVal = findValueByLevel(curValue, level);

		if (resultVal) {

			$popArr[level].find("[keyValue='" + resultVal.value + "']").addClass("current");
		}
	}

	/**
	 * 根据级别，找到包括一个json对象的父对象的值。在下拉点开时，以找到当前选择值的父节点值时使用。
	 */
	function findValueByLevel(curValue, level) {

		var resultVal = null;

		if (!curValue) {
			return null;
		}
		if (curValue.level > level) {
			resultVal = findValueByLevel(curValue.parent, level);
			if (resultVal) {
				return resultVal;
			}
		} else if (curValue.level == level) {
			return curValue;
		} else {
			return null;
		}
	}

	/**
	 * 在json数组中找到当前值的json对象
	 */
	function findSelectedValue(dataArr, value) {

		if (!dataArr) {
			return null;
		}

		for (var i = 0; i < dataArr.length; i++) {
			if (dataArr[i].value == value) {
				return dataArr[i];
			} else {
				var val = findSelectedValue(dataArr[i].children, value);
				if (val) {
					return val;
				}
			}
		}

		return null;
	}

	/**
	 * 把当前的json值转为字符串
	 */
	function getDataString(tmpData, joinStr) {

		if (!tmpData) {
			return "";
		}
		var txtArr = new Array();
		txtArr.push(tmpData.text);
		var parent = tmpData.parent;
		while (parent) {
			txtArr.push(parent.text);
			parent = parent.parent;
		}
		return txtArr.reverse().join(joinStr);
	}

	/**
	 * 改变值时的处理。如果设置了监听，会触发onChanged事件。如果onChanged返回false,可以让事件的处理取消，值不改变。
	 */
	function changeValue($target, newValue) {

		var oldValue = $target.data("selectedValue");
		var options = $target.data('comboMenu').options;

		if (options.onChanged && oldValue != newValue) {
			var result = options.onChanged(oldValue, newValue);
			if (result == false) {
				return;
			}
		}

		if (options.showSingleLevel == false) {
			$target.find(".comboMenu_text").html(getDataString(newValue, options.joinStr));
		} else {
			$target.find(".comboMenu_text").html(!newValue ? "" : newValue.text);
		}
		$target.data("selectedValue", newValue);
	}

	/**
	 * 把传过来的data处理一下，在拷贝之前，加上全部数据
	 */
	function processData(data, addAllData) {
		var processData = new Array();
		if (addAllData) {
			processData.push({
				value : "",
				text : "全部数据"
			});
		}
		return processData.concat(copyJsonArray(data));
	}

	/**
	 * 点击comboMenu外的事件，以关闭comboMenu
	 */
	function comboMenuOuterClick(e) {
		if ($(e.target).parents(".comboMenu").length == 0) {
			$(".comboMenu").each(function() {
				$(this).comboMenu("hideCombo");
			});
		} else {
			$(".comboMenu").each(function() {
				if ($(e.target).parents(".comboMenu").attr("id") != $(this).attr("id")) {
					$(this).comboMenu("hideCombo");
				}
			});
		}
	}

	/**
	 * 拷贝json的数组
	 */
	function copyJsonArray(objArr) {
		var copyArr = new Array();
		if (!objArr) {
			return copyArr;
		}
		for (var i = 0; i < objArr.length; i++) {
			copyArr.push($.extend(true, {}, objArr[i]));
		}
		return copyArr;
	}

	$.fn.comboMenu = function(options, param) {

		var $target = $(this);

		if (typeof options == 'string') {
			return $.fn.comboMenu.methods[options]($target, param);
		}

		options = options || {};

		var state = $target.data('comboMenu');
		if (state) {
			$.extend(state.options, options);
		} else {
			state = $target.data('comboMenu', {
				options : $.extend({}, $.fn.comboMenu.defaults, options)
			});
			init($target);
		}
	};

	/**
	 * 定义的comboMenu的方法
	 */
	$.fn.comboMenu.methods = {
		getValue : function($target) {
			return $target.data("selectedValue");
		},
		setValue : function($target, value) {
			var selectedValue = findSelectedValue($target.data("comboMenuData"), value);
			changeValue($target, selectedValue);
		},
		setData : function($target, data) {
			var options = $target.data('comboMenu').options;
			options.data = data;
			var data = processData(options.data, options.hasAllData);
			if (options.addParentAndLevel) {
				addParentAndLevel(data, null, 0);
			}
			$target.data("comboMenuData", data);
		},
		getOptions : function($target) {
			return $target.data('comboMenu').options;
		},
		hideCombo : function($target) {

			var $popArr = $target.data("popArr");

			if ($popArr[0].css("display") != "none") {
				$popArr[0].find("[log=search_cate]").val("");
				hideSubPopFrom($target, 0);
			}
		}
	};

	/**
	 * comboMenu的默认设置
	 */
	$.fn.comboMenu.defaults = {
		height : 30,
		width : 190,
		popWidth : null, // 除了第一级的下拉菜单，其它下拉菜单的宽。如果不设，会默认与width值相等
		showSingleLevel : true, // 是否只显示选择值的单级值。如果是false,则显示其祖先到本级的值
		allLeafCanSelect : false, // 所有的节点都可以选。默认为false，也就是只有最末级的节点可以选
		hasAllData : false, // 是否添加所有数据可以选择的条目，如果设置为true，在下拉里的第一级的第一行会有一个“全部数据”的选项
		joinStr : " > ", // 搜索功能后，父子级之间的连接字符
		title : "",
		useSearch : true, // 是否用搜索功能
		multiple : false, // 是否可以多选。（目前还不可以，留做扩展用）
		addParentAndLevel : true, // 是否需要控件来添加parent和level属性。默认为true。如果数据已经有parent和level属性了，可设置为fale。
		onShow : null,
		onHide : null,
		onClick : null,
		onChanged : null
	};
})(jQuery);
$.widget("ui.soneLeftMenu", {
    //定义数据位空状态
	empty:false,
	options : {
		value : 0,
		jsonUrl : '/left.menu.json',
		//以后要给成从url获取
		defaultMenuInfo:[[{"lable":"控件", "value": 100},{"lable":"种类","value":10}],{"lable":"**","value":1200}]
	},
	_create : function() {
		this.element.addClass("wrap");
		var scope = this;

		if (this.options.data == null) {
			$.ajax({
						url : this.options.jsonUrl,
						type : "GET",
						success : function(mydata) {
							try {
								mydata = $.parseJSON(mydata);
								
							} catch (e) {
							}
                            if(mydata.length==0){
							    this.empty=true;
								$("#left-menu").hide();	
								$("#page-wrapper").css("margin-left",0);
							}else{
							    this.empty=false;
							    scope.createTemplate(mydata);
								$("#left-menu").show();
								$("#page-wrapper").css("margin-left",202);
							}
							
						}
					});

		} else {
			scope.createTemplate(this.options.data);
		}

	},
	_init : function() {
		//this._create();
	},
	createTemplate : function(mydata) {
		var scope = this;
		var tpl="";
		if(this.options.navBefore){
			tpl=$(this.options.navBefore);
		}
		var tpl = $('<div class="left-side"> <ul class="sone-left-menu"></ul></div>');

		$.each(mydata, function(n, item) {
			        var menuInfo=null;
		            if(item.infoUrl==""){
		            	menuInfo=scope.options.defaultMenuInfo;
		            }else{
		            	//暂时mock，以后用url获取数据
						menuInfo=item.infoUrl;
		            }
					if (item.type == "high" || item.type == "") {

                        tpl.find('.sone-left-menu').append('<li class="sidebar-menu item" ></li>');

						tpl.find('.sone-left-menu > li:last').append(
						   '<div class="itm-lv1" url="' + item.url + '">'+
							'<div class="tit">'+
								 '<span class="'+item.iconClass+' text-center"></span><br/>'+
								 '<span class="text-center">'+item.name+'</span><s>3</s>'+
							'</div>'+
							'<div class="con">'+
								'<div class="info">'+
								'</div>'+
								'<div class="price">'+
									'<strong>'+menuInfo[1].value+'</strong>'+menuInfo[1].lable+
								'</div>'+
							'</div>'+
						'</div>');
						//add info
						$.each(menuInfo[0], function (n,i) {
							tpl.find('.sone-left-menu > li:last .info').append('<span><b>'+i.value+'</b>'+i.lable+'</span>&nbsp;&nbsp;');
						});
				 	} else {

					    tpl.find('.sone-left-menu').append('<li class="sidebar-menu  item itm-one"></li>');
						tpl.find('.sone-left-menu > li:last').append('<div class="itm-lv1" url="' + item.url + '">'
						+'<span class="'+item.iconClass+' text-center"></span><span class="itm-name">'+item.name + '</span></div>');

					}
                    item.children=item.children||[];
					if(item.children.length>0){
					   tpl.find('.sone-left-menu > li:last').append('<div class="itm-lv2"><ul></ul></div>')
					
					}
					$.each(item.children, function(n, ch) {
								tpl.find('.sone-left-menu > li:last .itm-lv2 ul')
										.append('<li><a href="' + ch.url + '">'
												+ ch.name + '</a></li>');
							});

				});
		tpl.find('.sone-left-menu').append('<div class="resizer"><b></b></div>');

		$(scope.element).append(tpl);

		scope._update(mydata);

	},

	_setOption : function(key, value) {
		// this.options[key] = value;
	},

	_update : function(data) {

		this._initEvents();
	},

	_initEvents : function(element) {
		var _ele = element || this.element;

		//菜单折叠
		$(".resizer", _ele).click(function() {
					$(".wrap").toggleClass("narrow-wrap");
					$("#page-wrapper").toggleClass("narrow-content");
					$(".item", _ele).find(".itm-lv2").removeAttr("style");
				});
        //子菜单打开、关闭
		$(".item .itm-lv1", _ele).click(function() {
			if (!$(".wrap", _ele).hasClass("narrow-wrap")) {
				if ($(this).parent().hasClass("item-open")) {
					$(this).parent().removeClass("item-open");
				} else {
					$(_ele).find(".item-open").removeClass("item-open");
					$(this).parent().addClass("item-open");
				}
			}
		});
        //折叠后hover右侧菜单弹出
		$(".sone-left-menu .item", _ele).hover(function() {
					if ($(".wrap").hasClass("narrow-wrap")) {
						if ($(this).hasClass("item-open")) {
							isOpen = true;
						} else {
							isOpen = false;
						}
						$(this).addClass("item-open").find(".itm-lv2").show();
					}
				}, function() {
					if ($(".wrap").hasClass("narrow-wrap")) {
						if (!isOpen) {
							$(this).removeClass("item-open");
						}
						$(this).find(".itm-lv2").hide();
					}
				});
		//二级菜单a 标签点击
		$(".itm-lv2 a", _ele).click(function() {
					$(this).parent().siblings("li").find("a")
							.removeClass("curr");
					$(this).addClass("curr");
				});

		// 菜单添加点击事件a
		$("#left-menu a").click(function(o) {
					var link = $(this).attr("href");
					$("#ifm").attr('src', link);
					return false;
				});
		//一级菜单点击
		$("#left-menu div.itm-lv1").click(function(o) {
					var link = $(this).attr("url");
					if(link==""){
					    return false;
					}
					$("#ifm").attr('src', link);
					return false;
				});

	},

	destroy : function() {
		this.element.removeClass('wrap').text("");
		$.Widget.prototype.destroy.call(this);

	},
	getEmpty:function(){
	    return this.options.empty;
	}

});

/**
 * 需求度图谱jquery插件
 * @author songquanwang
 */
 ;var mockData = {
	key : "血糖仪",
	period : "2014-10-14 - 2014-10-14",
	features : [{
				"ratio" : 140,
				"value_r" : 830,
				"value" : 110,
				"feature" : "血糖仪",
				"attrValues" : [],
				"attrName" : "类别",
				"attrDegree" : 3819,
				"attrChange" : 100,
				"attrValue" : "血糖仪",
				"degree" : 2960,
				"change" : 100
			}, {
				"ratio" : 20,
				"value_r" : 841.5,
				"value" : 10,
				"feature" : "试纸",
				"attrValues" : [],
				"attrName" : "类别",
				"attrDegree" : 3819,
				"attrChange" : 100,
				"attrValue" : "试纸",
				"degree" : 829,
				"change" : 100
			}, {
				"ratio" : 260,
				"value_r" : 830,
				"value" : 110,
				"feature" : "三诺",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "三诺",
				"degree" : 574,
				"change" : 100
			}, {
				"ratio" : 140,
				"value_r" : 630,
				"value" : 310,
				"feature" : "罗氏",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "罗氏",
				"degree" : 555,
				"change" : 100
			}, {
				"ratio" : 20,
				"value_r" : 671.5,
				"value" : 210,
				"feature" : "强生",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "强生",
				"degree" : 134,
				"change" : 100
			}, {
				"ratio" : 260,
				"value_r" : 630,
				"value" : 310,
				"feature" : "鱼跃",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "鱼跃",
				"degree" : 124,
				"change" : 100
			}, {
				"ratio" : 140,
				"value_r" : 671.5,
				"value" : 210,
				"feature" : "欧姆龙",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "欧姆龙",
				"degree" : 114,
				"change" : 100
			}, {
				"ratio" : 140,
				"value_r" : 430,
				"value" : 510,
				"feature" : "罗康全",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "罗康全",
				"degree" : 66,
				"change" : 100
			}, {
				"ratio" : 20,
				"value_r" : 501.5,
				"value" : 410,
				"feature" : "ROCHE",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "ROCHE",
				"degree" : 56,
				"change" : 100
			}, {
				"ratio" : 260,
				"value_r" : 430,
				"value" : 510,
				"feature" : "怡成",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "怡成",
				"degree" : 44,
				"change" : 100
			}, {
				"ratio" : 140,
				"value_r" : 501.5,
				"value" : 410,
				"feature" : "会好",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "会好",
				"degree" : 42,
				"change" : 100
			}, {
				"ratio" : 380,
				"value_r" : 430,
				"value" : 510,
				"feature" : "艾科",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "艾科",
				"degree" : 34,
				"change" : 100
			}, {
				"ratio" : 140,
				"value_r" : 230,
				"value" : 710,
				"feature" : "雅培",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "雅培",
				"degree" : 33,
				"change" : 100
			}, {
				"ratio" : 20,
				"value_r" : 331.5,
				"value" : 610,
				"feature" : "采血针",
				"attrValues" : [],
				"attrName" : "类别",
				"attrDegree" : 3819,
				"attrChange" : 100,
				"attrValue" : "采血针",
				"degree" : 30,
				"change" : 100
			}, {
				"ratio" : 260,
				"value_r" : 230,
				"value" : 710,
				"feature" : "拜耳",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "拜耳",
				"degree" : 23,
				"change" : 100
			}, {
				"ratio" : 140,
				"value_r" : 331.5,
				"value" : 610,
				"feature" : "九安",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "九安",
				"degree" : 21,
				"change" : 100
			}, {
				"ratio" : 380,
				"value_r" : 230,
				"value" : 710,
				"feature" : "OMRON",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "OMRON",
				"degree" : 14,
				"change" : 100
			}, {
				"ratio" : 260,
				"value_r" : 331.5,
				"value" : 610,
				"feature" : "美国会好",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "美国会好",
				"degree" : 12,
				"change" : 100
			}, {
				"ratio" : 140,
				"value_r" : 30,
				"value" : 910,
				"feature" : "美迪信",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "美迪信",
				"degree" : 12,
				"change" : 100
			}, {
				"ratio" : 20,
				"value_r" : 161.5,
				"value" : 810,
				"feature" : "进口",
				"attrValues" : [],
				"attrName" : "产地",
				"attrDegree" : 12,
				"attrChange" : 100,
				"attrValue" : "进口",
				"degree" : 11,
				"change" : 100
			}, {
				"ratio" : 260,
				"value_r" : 30,
				"value" : 910,
				"feature" : "测利得",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "测利得",
				"degree" : 9,
				"change" : 100
			}, {
				"ratio" : 140,
				"value_r" : 161.5,
				"value" : 810,
				"feature" : "瑞迪恩",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "瑞迪恩",
				"degree" : 8,
				"change" : 100
			}, {
				"ratio" : 380,
				"value_r" : 30,
				"value" : 910,
				"feature" : "BAYER",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "BAYER",
				"degree" : 7,
				"change" : 100
			}, {
				"ratio" : 260,
				"value_r" : 161.5,
				"value" : 810,
				"feature" : "AIKE",
				"attrValues" : [],
				"attrName" : "品牌",
				"attrDegree" : 1895,
				"attrChange" : 100,
				"attrValue" : "AIKE",
				"degree" : 4,
				"change" : 100
			}, {
				"ratio" : 500,
				"value_r" : 30,
				"value" : 910,
				"feature" : "虹吸式",
				"attrValues" : [],
				"attrName" : "采血方式",
				"attrDegree" : 4,
				"attrChange" : 100,
				"attrValue" : "虹吸式",
				"degree" : 4,
				"change" : 100
			}]

};
(function($) {
	var methods = {
		init : function(options) {
			var scope=this;
			// rapher
			var attrs = Raphael._availableAttrs;
			attrs.font = '12px "Arial", "Microsoft Yahei"';
			attrs["font-size"] = "12";
			if (!Raphael.svg)
				attrs.font = '12px "Microsoft Yahei"', attrs["font-size"] = "12";
			this.opts = options;
			this.sets = {
				stsTitl : {},
				stsBgs : {},
				stsTags : {},
				stsValv : {},
				stsPoly : {},
				stsCirc : {},
				stsText : {},
				stsHove : {},
				stsLayer : {}
			};
			this.OPTS = {
				padds : {
					title : 10,
					left : 10,
					right : 20,
					bottom : 20,
					maxR : 9,
					bgLbar : 38,
					bgCright : 15,
					tagHig : 0
				}
			};
			this.paper = Raphael(options.divID);
			this.topN = options.topN || 4;
			this.opts.padds = this.sCopy(this.padds || {}, this.OPTS.padds);
			this.paper.gsid = this.gsid();
			return methods;
		},
		sCopy : function(a, c) {
			for (var d in c)
				d in a || (a[d] = c[d]);
			return a;
		},
		getColor : function(a) {
			var b = ["#6e87d7", "#11c897", "#fa7256", "#b172c5", "#f367a7"],
			c = b.length;
			return b[(a || 0) % c];
		},
		each : function() {
			$.each.apply(this, arguments);
		},
		gsid : function(a) {
			var c = 0;
			a += "_gsid_";
			return function(d) {
				var e = d ? d.id || "" : "";
				if (e === "")
					e = a + c++, d && (d.id = e);
				return e;
			};
		}("auto"),
		drawBg : function() {
			function n(h) {
				var o = l.slice();
				o[13] = o[9] += h;
				o[11] += h;
				return o;
			}
			var j = this.paper, i = $("#" + this.opts.divID);
			j = j.setSize(i.width(), i.height());
			i = this.opts.padds;
			var p = i.width = j.width, x = i.height = j.height, u = i.bgTop = i.title
					+ i.tagHig, y = i.bgWidth = p - i.left - i.right, z = i.bgHeight = x
					- u - i.bottom, C = i.bgRight = p - i.right;
			y = i.bgCwidth = y - i.bgCright - i.bgLbar;
			var c = i.bgBottom = x - i.bottom, a = i.bgMiddle = u + z / 2, d = this.sets, b = d.stsBgs;
			d = d.stsLayer;
			for (var e = b.bgCircs || (b.bgCircs = []), g = ["#dbdfeb",
					"#e4e7f2", "#eaecf5", "#f0f2f8", "#f3f5f9", "#f7f8fa"], f = g.length; f--;)
				(e[f] || (e[f] = j.circle(i.left + i.bgLbar, a, 0).attr({
							stroke : "#ffffff",
							"stroke-weight" : 1
						}))).attr({
							r : y * (f + 1) / 6,
							fill : g[f]
						});
			(b.axisX || (b.axisX = j.path().attr({
						stroke : "#ffffff",
						"stroke-width" : 1
					}))).attr({
						path : ["M", 0, a, p, a]
					});
			p = ["M", -5, -5, "L", -5, 5 + x, 5 + p, 5 + x, 5 + p, c, i.left,
					c, i.left, u, 5 + p, u, 5 + p, -5, -5, -5];
			(b.bgMask || (b.bgMask = j.path().attr({
						fill : "#ffffff",
						stroke : "none"
					}))).attr({
						path : p
					});
			(b.lBar || (b.lBar = j.rect().attr({
						fill : "#f7f8fa",
						stroke : "#dbdfeb",
						"stroke-width" : "0.9"
					}))).attr({
						x : i.left,
						y : u + 1,
						width : i.bgLbar,
						height : z - 2
					});
			var l = ["M", 17, 0, "L", 34, 13, 29, 13, 29, 23, 17, 13, 5, 23, 5,
					13, 0, 13, 17, 0];
			(b.arrUp || (b.arrUp = j.path(n(40)).attr({
						stroke : "none",
						fill : "#ffb049"
					}))).transform("t" + (i.left + 2) + "," + (u + 2));
			(b.arrUp_ex || (b.arrUp_ex = j.path(["M", 0, 0, "L", 24, 0, 24, 24,
					0, 24, 0, 0]).attr({
						stroke : "none",
						fill : "90-#ffffff-#ffb049"
					}))).transform("t" + (i.left + 7) + "," + (u + 45));
			(b.arrDown || (b.arrDown = j.path(n(40)).attr({
						stroke : "none",
						fill : "#606e82"
					}))).transform("t" + (i.left + (Raphael.svg ? 2 : -1))
					+ "," + (c - 40 - 26) + "r180");
			(b.arrDown_ex || (b.arrDown_ex = j.path(["M", 0, 0, "L", 24, 0, 24,
					24, 0, 24, 0, 0]).attr({
						stroke : "none",
						fill : "90-#606e82-#ffffff"
					}))).transform("t" + (i.left + 7) + "," + (c - 40 - 30));
			(b.arrRight || (b.arrRight = j.path(n(66)).attr({
						stroke : "none",
						fill : "#999999"
					}))).transform("t" + (C - 66 - 13) + "," + (a - 33 - 12)
					+ "r90");
			(b.arrRight_ex || (b.arrRight_ex = j.path(["M", 0, 0, "L", 24, 0,
					24, 24, 0, 24, 0, 0]).attr({
						stroke : "none",
						fill : "0-#ffffff-#999999"
					}))).transform("t" + (C - 66 - 45) + "," + (a - 12.5));
			(b.txtUp || (b.txtUp = j.text(0, 0, "上升".split("").join("\n"))
					.attr({
								"text-anchor" : "start",
								fill : "#ffffff"
							}))).attr({
						x : i.left + 13,
						y : u + 32
					});
			(b.txtUp2 || (b.txtUp2 = j
					.text(0, 0, "环比需求变化".split("").join("\n")).attr({
								"text-anchor" : "start",
								fill : "#999999"
							}))).attr({
						x : i.left + 13,
						y : u + 110
					});
			(b.txtDown2 || (b.txtDown2 = j.text(0, 0,
					"环比需求变化".split("").join("\n")).attr({
						"text-anchor" : "start",
						fill : "#999999"
					}))).attr({
						x : i.left + 13,
						y : c - 110
					});
			(b.txtDown || (b.txtDown = j.text(0, 0, "下降".split("").join("\n"))
					.attr({
								"text-anchor" : "start",
								fill : "#ffffff"
							}))).attr({
						x : i.left + 13,
						y : c - 32
					});
			(b.txtRight || (b.txtRight = j.text(0, 0, "需求度变弱").attr({
						"text-anchor" : "start",
						fill : "#ffffff"
					}))).attr({
						x : C - 66 - 26,
						y : a - 1
					});
			(b.circWord || (b.circWord = j
					.circle(i.left + i.bgLbar + 30, a, 55))).attr({
						fill : this.getColor(0),
						stroke : "#ffffff",
						"stroke-width" : 6
					});
			(b.textWord || (b.textWord = j.text(i.left + i.bgLbar + 30, a, "")))
					.attr({
								fill : "#ffffff",
								"font-size" : "14px"
							});
			(b.textNodata || (b.textNodata = j.text(0, 0, "无数据").hide()))
					.attr(this.sCopy({
								x : y / 2,
								y : a
							}, "无数据"));
			if (!d.bg)
				d.bg = j.path();
			return this;
		},
		/**
		 * 设置数据
		 */
		setData : function(n) {
			var maxX = 0;
			var maxY = 0;
			n.items = [];
			$.each(n.features, function(j, i) {
						n.items.push({
									text : i.feature,
									value_r : i.value_r / 1E3,
									xy : [i.value / 1E3, i.ratio / 1E3],
									attrValues : i.attrValues,
									degree : i.degree,
									attrValue : i.attrValue,
									change : i.change,
									attrName : i.attrName,
									attrDegree : i.attrDegree,
									attrChange : i.attrChange
								});
					});
			this.datas = n;
			return this;
		},
		/**
		 * 画数据点
		 */
		drawCircle : function(n) {
			// 定义scope
			var scope = this;
			var j = this.opts.padds, i = j.bgHeight / 2, p = Math
					.sqrt(j.bgCwidth * j.bgCwidth - i * i), x = j.bgCwidth / 6, u = this.paper, y = this.sets, z = y.stsCirc, C = z[""]
					|| (z[""] = []);
			z = y.stsText;
			var c = z[""] || (z[""] = []);
			z = y.stsLayer;
			if (n) {
				y.stsBgs.circWord.attr({
							fill : n
						});
				y.stsBgs.textWord.attr({
							text : this.text_n(this.datas.key)
						});
			}
			if (!this.datas)
				return this;
			$.each(this.datas.items, function(a, d) {
						// 正数增长 负数下降
						var attrText = " 环比增长:";
						var attrValueText = " 环比增长：";
						if (d.attrChange < 0) {
							attrText = " 环比下降：";
							d.attrChange = -d.attrChange;
						}
						if (d.change < 0) {
							attrValueText = " 环比下降：";
							d.change = -d.change;
						}
						var b = d.xy.slice(), e = 0, g = Math
								.floor((1 - d.value_r) * 5);
						g = Math.floor(d.xy[0] * 5);
						if (g > 4)
							g = 4;
						e = j.maxR - g * 1.5;
						b[0] *= p - j.maxR;
						b[1] *= i - j.maxR;
						if (g == 4)
							b[1] = d.xy[1] * (i - j.maxR - 20)
									+ (d.xy[1] >= 0 ? 20 : -20);
						var f = Math.sqrt(x * (g + 2) * x * (g + 2) - b[1]
								* b[1]);
						f -= e;
						var l = Math.abs(b[1]) < x * (g + 1) ? Math.sqrt(x
								* (g + 1) * x * (g + 1) - b[1] * b[1]) : 0;
						l += e;
						b[0] = (f - l) * (d.xy[0] - 0.2 * g) / 0.2 + l;
						b[0] += j.left + j.bgLbar;
						b[1] = j.bgMiddle - b[1];
						(C[a] || (C[a] = u.circle().attr({
									stroke : "#ffffff"
								}).data("posInfo", {
									text : d.text,
									attrValues : d.attrValues,
									"cx" : b[0],
									"cy" : b[1]
								}).hover(function() {
							this.attr("r", this.data("cr") * 1.4);
							var str = scope.createPopTable(
									this.data("posInfo").text, this
											.data("posInfo").attrValues);
							$("#popover div").remove();
							$("#popover").append(str);
							$("#popover div").css({
										display : "block",
										left : this.data("posInfo").cx,
										top : this.data("posInfo").cy,
										"z-index" : "100000000"
									});
						}, function() {
							this.attr("r", this.data("cr"));
							$("#popover div").css({
										display : "none"
									});
						}))).attr({
							cx : b[0],
							cy : b[1],
							r : e,
							fill : d.xy[1] >= 0 ? "#ffb049" : "#606e82",
							"stroke-width" : 2,
							// title : d.text
							title : '"属性" ' + d.attrName + ' 搜索次数：'
									+ d.attrDegree + attrText + d.attrChange
									+ '%\r"属性值 "' + d.attrValue + '搜索次数：'
									+ d.degree + attrValueText + d.change + "%"
						}).data("cr", e).show();

						f = b[0] + e + 3;
						b = b[1];
						if (b + 8 > j.bgBottom)
							b = j.bgBottom - 8;
						else if (b - 8 < j.bgTop)
							b = j.bgTop + 8;
						(c[a] || (c[a] = u.text().attr({
									"text-anchor" : "start"
								}))).attr({
									x : f,
									y : b,
									text : d.text,
									fill : g > 2 ? "#999999" : "#333333",
									title : d.text

								}).show();
						if (g > 3) {
							d = c[a].getBBox().width;
							if (f + d > j.bgRight - j.bgCright) {
								f -= d + e * 2 + 6;
								c[a].attr({
											x : f
										});
							}
						}
					});
			for (n = this.datas.items.length; n < C.length; n++) {
				C[n].hide();
				c[n].hide();
			}
			y.stsBgs.textNodata[this.datas.items.length ? "hide" : "show"]();
			if (!z.circ)
				z.circ = u.path();
			return this;
		},
		/**
		 * 
		 */
		text_n : function(n) {
			for (var j = [], i = n.length, p = 0; p < i - 1; p++)
				if (n.charCodeAt(p) < 256 && n.charCodeAt(p + 1) < 256) {
					j.push(n.slice(p, p + 2));
					p++;
				} else
					j.push(n.slice(p, p + 1));
			p < i && j.push(n.slice(-1));
			if (j.length > 12) {
				j.length = 11;
				j.push("aaa");
			}
			i = j.length;
			i > 6 && j.splice(Math.floor(i / 2), 0, "\n");
			return j.join("");
		},
		/**
		 * 
		 */
		createPopTable : function(attrName, attrValues) {
			// tyle=\"position:absolute;background-color:white;border-radius:
			// 6px;border: 1px solid rgba(0, 0, 0, 0.2);\"
			// 如果没有属性值，不弹出窗口
			if (attrValues.length == 0) {
				return "";
			}
			var tableStr = "<div  style=\"position:absolute;background-color:white;border-radius: 6px;border: 1px solid rgba(0, 0, 0, 0.2);\"class=\" table-responsive\">"
					+ "<table class=\"table table-bordered table-hover table-striped\">"
					+ "<thead>"
					+ "<tr style=\"width:400px\">"
					+ "<th>"
					+ attrName
					+ "</th>"
					+ "<th>搜索次数</th>"
					+ "<th>搜索次数环比变化</th>" + "</thead>" + "<tbody>";

			for (var i = 0; i < attrValues.length; i++) {
				var child = attrValues[i];
				tableStr += "<tr>";
				tableStr += "<td>" + child.attrValue + "</td>";
				tableStr += "<td>" + child.degree + "</td>";
				tableStr += "<td>" + child.change + "</td>";
				tableStr += "</tr>";
			}
			tableStr += "</tbody>";
			tableStr += "</table>";
			tableStr += "</div>";
			// alert(tableStr);

			return tableStr;

		}

	};

	$.fn.demandGraph = function(method) {

		if (methods[method]) {
			return methods[method].apply(this, Array.prototype.slice.call(
							arguments, 1));
		} else if (typeof method === 'object' || !method) {
			return methods.init.apply(methods, arguments);
		} else {
			$.error('Method ' + method + ' does not exist on jQuery.demandGraph');
		}

	};

})(jQuery);
$.widget("ui.soneHeader", {
	options : {
		//modelNames : ['UI标准化模板'],
		messages : [{
					uImg : './img/avatar3.png',
					uName : 'DIvyia',
					uInfo : '刚才看见你的数据，有些想法刚才看见你的数据，有些想法',
					uTime : '2分钟前'
				}, {
					uImg : './img/avatar3.png',
					uName : 'DIvyia',
					uInfo : '刚才看见你的数据，有些想法刚才看见你的数据，有些想法',
					uTime : '2分钟前'
				}, {
					uImg : './img/avatar3.png',
					uName : 'DIvyia',
					uInfo : '刚才看见你的数据，有些想法刚才看见你的数据，有些想法',
					uTime : '2分钟前'
				}],
		projects : [{
					projectName : 'A项目',
					pct : '80%',
					style : 'p-type1'
				}, {
					projectName : 'B项目',
					pct : '85%',
					style : 'p-type2'
				}, {
					projectName : 'C项目',
					pct : '70%',
					style : 'p-type3'
				}],
		user : [{
					userImg : './img/avatar3.png',
					userName : '李某某--营销开发部',
					usermes : 'Member since Nov. 2012'

				}]
	},

	_create : function() {
		var scope = this;     
		if(this.options.data==null){
			  $.ajax({
				 url: "/header.json",
				 type: "GET",
				 success:function(mydata) {
					try{
						mydata = $.parseJSON(mydata);
					}catch(e){
					}
					scope.createTemplate(mydata);
				},
				error:function(data){
					alert(data);
				}
			 });
		
		}else{
		    scope.createTemplate(this.options.data);
		}
		
	},
	createTemplate:function(mydata){
	    var tpl = $('<div class="header-main"> '
				+ '<div class="logo">UI标准化模版</div>'
				+ '<div  class="nav" id="navlist">'
				+ '<ul id="navfouce"></ul>'
				+ '</div>'
				+ '<div class="nav-option">'
				+ '<a href="javascript:;" class="prev">&lt;</a>'
				+ ' <a href="javascript:;" class="next">&gt;</a>'
				+ ' </div>'

				+ ' <div class="navbar-right">'
				+ '<form class="navbar-form navbar-left search-bar " role="search">'
				+ '	<div class="form-group">'
				+ '	<input  id="search" class="form-control" type="text" placeholder="Search...">'
				+ '	</div>'
				+ '	<button class="btn btn-default" type="submit" data-original-title="Search"><span class="glyphicon glyphicon-search"></span></button>'
				+ '</form>'
				+ ' <ul class=" navbar-nav">'
				+ ' <li class="dropdown  messages-menu">'
				+ '<a class="dropdown-toggle" data-toggle="dropdown" href="#"><i class="glyphicon glyphicon-envelope"></i><span class="label  label-success">4</span></a>  <ul class="dropdown-menu fore1 " role="menu"><li class="header"> <h4>4个项目正在进行</h4></li></ul>'
				+ ' </li>'
				+ ' <li class="dropdown projects-menu">'
				+ '<a class="dropdown-toggle" data-toggle="dropdown" href="#"><i class="glyphicon glyphicon-list"></i><span class="label  label-success">4</span></a>  <ul class="dropdown-menu fore2 " role="menu"><li class="header"> <h4>4个项目正在进行</h4></li></ul>'
				+ ' </li>'
				+ ' <li class="dropdown user-menu">'
				+ '<a class="dropdown-toggle" data-toggle="dropdown" href="#"><i class="glyphicon glyphicon-user"></i>&nbsp;<i style="font-style:normal ">李某某</i>  <i class="caret"></i></a>  <ul class="dropdown-menu fore3 " role="menu"></ul>'
				+ ' </li>' + ' </ul>' + '</div>'
				//二级菜单
				+'<div class="box" id="navbox" style="height:0px;opacity:0;overflow:hidden;"></div>'
				+' </div>');

		$.each(mydata, function(k, v) {
					var tmp = '';
					if (k == 0) {
						tmp = 'class="curr"';
					}
					tpl.find("#navlist ul").append('<li ' + tmp
							+ ' ><a href="javascript:;" level='+v.level+' sonMenuNum='+v.sonMenuNum+' menuId='+v.id+' url='+ v.url +'>'+ v.name+'</a></li>');
					var secondMenuData=v.children;
					if(secondMenuData!=null){
					   for(var i=0;i<secondMenuData.length;i++){
					    var child=secondMenuData[i];
					    if(i==0){
						    tpl.find("#navbox").append('<div class="cont" style="display:none;"><ul></ul></div>');
						
						}
						tpl.find("#navbox div:last ul").append('<li><a href="#" level='+child.level+' sonMenuNum='+child.sonMenuNum+' menuId='+child.id+' url='+ child.url +'>'+ child.name+'</a></li>');
					   
					   }
					}
						
				});
		$.each(this.options.messages, function(k, v) {


					var item='<li><a href="" class="line"> '+
	                 ' <div class="u-img"><img src="'+v.uImg+'" alt="" class="img-responsive"></div>'+
	                  '<div class="u-name">'+v.uName+'<small class="u-time">'+v.uTime+'</small></div>'+
	                 ' <div class="u-info">'+v.uInfo+'</div>'+
	                 
                	'</a></li>';

					tpl.find(".navbar-right .fore1 ").append(item);
				});

		$.each(this.options.projects, function(k, v) {

					var item = '<li>' + '<a href="">' + '<span class="txt">'
							+ '<span class="tit">' + v.projectName + '</span>'
							+ '<span class="pct">' + v.pct + '</span>'
							+ '</span>' + '<span class="progress ' + v.style
							+ '"><b style="width:' + v.pct
							+ '"></b><s></s></span>' + '</a>' + '</li>';
					tpl.find(".navbar-right  .fore2").append(item);
				});
		$.each(this.options.user, function(k, v) {

			var item = '<li  class="text-center user-header ">'
					+ ' <img src="'
					+ v.userImg
					+ '" class="img-circle" alt="">'
					+ '<h4 class="text-center">'
					+ v.userName
					+ '</h4>'
					+ '<p class="text-center">'
					+ v.usermes
					+ '</p>'
					+ '</li>'
					+ '<li class="user-footer"><div class="pull-left"><a class="btn btn-default btn-flat" href="#">Profile</a></div><div class="pull-right"><a class="btn btn-default btn-flat" href="#">Sign out</a></div></li>';
			tpl.find(".navbar-right  .fore3").append(item);
		});

		this.element.html(tpl);

		this._update(mydata);
	
	
	},

	_setOption : function(key, value) {
		this.options[key] = value;

	},

	_update : function(data) {

		this._initEvents();
	},

	_initEvents : function(element) {
		var _ele = element || this.element;
		$(window).bind("load resize", function() {
			var topOffset = 50;
			var width = (this.window.innerWidth > 0)
					? this.window.innerWidth
					: this.screen.width;
			if (width < 1024) {
				$('#wrapper', _ele).addClass('container');
				topOffset = 100; // 2-row-menu
			} else {
				$('#wrapper', _ele).removeClass('container');
			}

			var height = (this.window.innerHeight > 0)
					? this.window.innerHeight
					: this.screen.height;
			height = height - topOffset;
			if (height < 1)
				height = 1;
			if (height > topOffset) {
				$("#page-wrapper", _ele).css("min-height", (height) + "px");
			}
		});

		/*
		 * $(".messages dl", _ele).click(function(event) {
		 * event.stopPropagation(); if ($(this).find("dd").css("display") ==
		 * "none") { $(".messages").find("dd").hide(); $(this).find("dd").show() }
		 * else { $(this).find("dd").hide() } }); $(".messages dd",
		 * _ele).click(function(event) { event.stopPropagation(); });
		 * $(document).click(function() { $(".messages",
		 * _ele).find("dd").hide(); });
		 */
		window.onload = window.onresize = function() {
			var w = $(window).width();
			var n = $(".nav", _ele).find("li").length;
			var num = parseInt((w - 766) / 110);
			var step = 0;
			var isClick = false;
			if (n <= num) {
				num = n;
				$(".nav-option", _ele).hide();
			} else if (n > num) {
				$(".nav-option", _ele).show();
			}
			/*$(".nav", _ele).css("width", $(document).width() - 817 + "px");*/
			$(".nav", _ele).css("width", 110 * n + "px");
			$(".nav ul", _ele).css("width", 110 * n + "px");
			$(".nav-option .next", _ele).css("left", (110 * num + 260) + "px");

			$(".nav-option .next", _ele).click(function() {
						if (step < (n - num) && !isClick) {
							step++;
							isClick = true;
							$(".nav ul", _ele).animate({
										"left" : -step * 110 + "px"
									}, 1000);
							setTimeout(function() {
										isClick = false;
									}, 1000);
						}
					});
			$(".nav-option .prev", _ele).click(function() {
						if (step != 0 && !isClick) {
							step--;
							isClick = true;
							$(".nav ul", _ele).animate({
										"left" : -step * 110 + "px"
									}, 1000);
							setTimeout(function() {
										isClick = false;
									}, 1000);
						}
					});
		};

		$('#search', _ele).typeahead({
			source : ['Dashboard', 'Form elements', 'Common Elements',
					'Validation', 'Wizard', 'Buttons', 'Icons',
					'Interface elements', 'Support', 'Calendar', 'Gallery',
					'Reports', 'Charts', 'Graphs', 'Widgets'],
			items : 4

		});

		this.addFirstMenuEvent();
		this.addSecondMenuEvent();

	},

	_destroy : function() {
		this.element.text("");
		$.Widget.prototype.destroy.call(this);

	},
	addFirstMenuEvent : function() {
	   var scope=this;
       $("#navlist  a").click(function(o){
			 if($(this).parent().hasClass("curr")){
				return false;
			 }
			 //点击一级菜单 隐藏left menu 修改iframe
			 $("#navlist  li").removeClass("curr");
			 $(this).parent().addClass("curr");
			 var url=$(this).attr("url");
			 var menuId=$(this).attr("menuid");
			 var level=$(this).attr("level"); 
			 var sonMenuNum=$(this).attr("sonMenuNum"); 
			 scope.menuClick(level,sonMenuNum,url,menuId);
			 return false;
		});
	},
	// 添加二级菜单
	addSecondMenuEvent : function() {

		var time = null;
		var list = $("#navlist");
		var box = $("#navbox");
		var lista = list.find("a");

		for (var i = 0, j = lista.length; i < j; i++) {
			if (lista[i].className == "now") {
				var olda = i;
			}
		}

		var box_show = function(hei) {
			box.stop().animate({
						height : hei,
						opacity : 1
					}, 40);
		}

		var box_hide = function() {
			box.stop().animate({
						height : 0,
						opacity : 0
					}, 40);
		}

		lista.hover(function() {
					lista.removeClass("now");
					$(this).addClass("now");
					box_hide();
					clearTimeout(time);
					var index = list.find("a").index($(this));
					if(box.find(".cont").hide().eq(index).length>0){
					    box.find(".cont").hide().eq(index).show();
						var _height = box.find(".cont").eq(index).height() + 25;
						box_show(_height);
					}
					
				}, function() {
					time = setTimeout(function() {
								box.find(".cont").hide();
								box_hide();
							}, 50);
					lista.removeClass("now");
					lista.eq(olda).addClass("now");
				});

		box.find(".cont").hover(function() {
					var _index = box.find(".cont").index($(this));
					lista.removeClass("now");
					lista.eq(_index).addClass("now");
					clearTimeout(time);
					$(this).show();
					var _height = $(this).height() + 25;
					box_show(_height);
				}, function() {
					time = setTimeout(function() {
								$(this).hide();
								box_hide();
							}, 50);
					lista.removeClass("now");
					lista.eq(olda).addClass("now");
				});
		//添加二级菜单事件
		var scope=this;
		$("#navbox a").click(function(){
		      $("#navfouce li").removeClass("curr");
		      var index=$("#navbox .cont").index($(this).closest(".cont"));
			  $("#navfouce li").eq(index).addClass("curr");
			  var menuId=$(this).attr("menuid");
			  //重新构建LeftMenu iframe 欢迎界面
		      var url=$(this).attr("url");
			  var level=$(this).attr("level"); 
			  var sonMenuNum=$(this).attr("sonMenuNum"); 
			  scope.menuClick(level,sonMenuNum,url,menuId);
			  return false;
		});
		

	},
	menuClick:function(level,sonMenuNum,url,id){
	    //url空且 有菜单才对;
	    
		//获取二级、三级菜单数据,如果数据为空，隐藏leftmenu iframe 刷新;如果有数据 构造菜单；iframe指向欢迎界面
		if(parseInt(level)==1 && parseInt(sonMenuNum) >0 ){
		    return false;
		}
		$('#left-menu').soneLeftMenu('destroy');
		var menu=$('#left-menu').soneLeftMenu({
					jsonUrl:'/'+id+'.json'
				});
		/*var empty=menu.soneHeader('getEmpty');
		if(empty){
			$("#left-menu").hide();	
		}else{
		   $("#left-menu").show(); f
		}*/
		if(url!=""){
		    $("#ifm").attr('src', url);
		}else{
		    $("#ifm").attr('src', "/docs/welcome/welcome.html");
		}
		//iFrameResize();
		 
	}
});

/**
 * province picker
 * 地区选择弹出层函数
 * objid 选择区域的ID(input id) showid 弹出DIV的id input_cn 选择区域的ID(input id) input
 * input id 选择地区后将值放在input的隐藏变量中 QSarr strlen
 * 
 * @songquanwang
 */
;
(function($) {
		var areas = [{
			areaName : '华北地区',
			citys : [{
						cityName : '北京',
						cityCode : 'BJ'
					}, {
						cityName : '天津',
						cityCode : 'TJ'
					}, {
						cityName : '河北',
						cityCode : 'HBS'
					}, {
						cityName : '山西',
						cityCode : 'SXS'
					}, {
						cityName : '内蒙古',
						cityCode : 'NMGQ'
					}]
		},

		{
			areaName : '东北地区',
			citys : [{
						cityName : '辽宁',
						cityCode : 'LNS'
					}, {
						cityName : '吉林',
						cityCode : 'JLS'
					}, {
						cityName : '黑龙江',
						cityCode : 'HLJS'
					}]
		},

		{
			areaName : '华东地区',
			citys : [{
						cityName : '上海',
						cityCode : 'SH'
					}, {
						cityName : '江苏',
						cityCode : 'JS'
					}, {
						cityName : '浙江',
						cityCode : 'ZJ'
					}, {
						cityName : '安徽',
						cityCode : 'AHS'
					}, {
						cityName : '福建',
						cityCode : 'FJS'
					}, {
						cityName : '江西',
						cityCode : 'JXS'
					}
					, {
						cityName : '山东',
						cityCode : 'SDS'
					}]
		},

		{
			areaName : '华中地区',
			citys : [{
						cityName : '河南',
						cityCode : 'HNS'
					}, {
						cityName : '湖北',
						cityCode : 'HBS'
					}, {
						cityName : '湖南',
						cityCode : 'HUNS'
					}]
		},

		{
			areaName : '华南地区',
			citys : [{
						cityName : '广东',
						cityCode : 'GDS'
					}, {
						cityName : '广西',
						cityCode : 'GXS'
					}, {
						cityName : '海南',
						cityCode : 'HANS'
					}]
		},

		{
			areaName : '西南地区',
			citys : [{
						cityName : '重庆',
						cityCode : 'CQS'
					}, {
						cityName : '四川',
						cityCode : 'SCS'
					}, {
						cityName : '贵州',
						cityCode : 'GZS'
					}, {
						cityName : '云南',
						cityCode : 'YNS'
					}, {
						cityName : '西藏',
						cityCode : 'XZQ'
					}]
		},

		{
			areaName : '西北地区',
			citys : [{
						cityName : '陕西',
						cityCode : 'SXS'
					}, {
						cityName : '甘肃',
						cityCode : 'GSS'
					}, {
						cityName : '青海',
						cityCode : 'QHS'
					}, {
						cityName : '宁夏',
						cityCode : 'NXS'
					}, {
						cityName : '新疆',
						cityCode : 'XJS'
					}]
		}];

	var methods = {
		init : function(options) {
	        var id=options.showid.substring(1);
			var tpl=$('<div id="'+id+'">'+
					'<div class="OpenFloatBox">'+
						'<div class="modal fade" id="contactUsModal" tabindex="-1" '+
							'role="dialog" aria-labelledby="myModalLabel" aria-hidden="true"> '+
							'<div class="modal-dialog"> '+
								'<div class="modal-content"> '+
									'<div class="modal-header"> '+
										'<button type="button" class="close" data-dismiss="modal" '+
											'aria-hidden="true" id="contactAdmin_closeBtn"> '+
											'&times;</button> '+
										'<button id="saleAreaTop" name="area" type="button" '+
											'class="btn btn-primary">销售区域</button> '+
									'</div> '+
									'<div class="modal-body"> '+
										'<div id="sel_district" '+
											'style="border-top: solid 0px; border-color: #C0C0C0;"> '+
											'<div id="saleArea"> '+
												'<table class="table table-condensed" border="0"> '+	
                                                '</table> '+
											'</div> '+
										
											
										'</div> '+
										'<div class="txt"> '+
												'<div class="selecteditem"></div> '+
											'</div> '+									
									'</div> '+
									' <div class="modal-footer">'+
        									
											'<div class="txt"> '+
												'<div align="center"> '+
													'<button id="confirmName" type="button" data-dismiss="modal" '+
														'name="confirmName" class="btn btn-primary">确定</button> '+
												'</div> '+
											'</div> '+       
      									'</div>'+	
								'</div> '+
							'</div> '+
						'</div> '+
					'</div> '+
				'</div> ');
            $.each(areas, function(k, v) {
            	    var child=v;
            	    var str='<tr><td>'+v.areaName+'</td>';
            	    $.each(v.citys, function(ck, cv) {
            	    	str+='<td>'+
            	    	     '<td> '+
								'<div class="item" id="BJ"> '+
									'<label title='+cv.cityName+' class="titem">  '+
									 '<input type="checkbox" value='+cv.cityCode+'  title='+cv.cityName+'  class="b" /> '+cv.cityName+
									'</label> '+
									'<div class="sitem"></div> '+
								'</div> '+
							'</td> ';
            	    	
            	    });
            	    str+='</tr>'
					tpl.find(".table.table-condensed").append(str);
				});
			tpl.appendTo("body");

			var data = $(this).data('provincepicker');
			//没有配置项
			var opt = $.extend({

			}, options);
     
			this.OpenCategoryLayer(opt.objid, opt.showid, opt.input_cn, opt.input, opt.input_cn2,
				opt.input2, opt.QSarr, opt.strlen);
			return this;

		},

		destroy : function() {

			$(this).removeData('provincepicker');

		},
		OpenCategoryLayer : function(objid, showid, input_cn, input, input_cn2,
				input2, QSarr, strlen) {
			var scope=this;
			$(objid).click(function() {
				$(this).blur();
				$(showid + " .OpenFloatBoxBg").css("opacity", 0.2);
				$(showid).show();
				//$("#contactUsModal").removeClass("modal fade");
				$(showid + " .OpenFloatBox").css({
					"left" : ($(document).width() - $(showid + " .OpenFloatBox")
							.width())
							/ 2,
					"top" : "120",
					"z-index" : "999"
				});
				scope.SetBoxBg(showid);
				$(showid + " .item").unbind().hover(function() {
					$(this).find(".titem").addClass("titemhover");

					var strclass = QSarr[$(this).attr("id")];
					var pid = $(this).attr("id");
					if (strclass) {
						$(this).find(".sitem").css("display", "block");
						if ($(this).find(".sitem").html() == "") {
							$(this).find(".sitem").html(scope.MakeLi(strclass, pid));// 生成LI
						}
					}
					$(showid + " .OpenFloatBox label").unbind().click(
							function() {
								if ($(this).attr("title")) {
									if ($(this).find(":checkbox")
											.attr('checked')) {
										$(this).next().find(":checkbox").attr(
												'checked', true);
									} else {
										$(this).next().find(":checkbox").attr(
												'checked', false);
									}
								} else {
									if ($(this).parent()
											.find(":checkbox:checked").length > 0) {
										$(this).parent().prev()
												.find(":checkbox").attr(
														'checked', false);
									}
								}
								scope.CopyItem(showid);
							});
				}, function() {
					$(this).find(".titem").removeClass("titemhover");
					$(this).find(".sitem").css("display", "none");
				});
				$(showid + " .OpenFloatBox .DialogClose").unbind().hover(
						function() {
							$(this).addClass("spanhover")
						}, function() {
							$(this).removeClass("spanhover")
						});

				$(showid + " .close").click(function() {
							DialogClose(showid);
						});

				// 确定选择 按钮的ID 必须是 confirmName
				$("#confirmName").unbind().click(function() {
					SetInput(showid, input_cn, input, input_cn2, input2, strlen);
				});

				// 关闭
				function DialogClose(showid) {
					$(showid).hide();
				}
				// 设置表单
				function SetInput(showid, input_cn, input, input_cn2, input2,
						strlen) {
					var a_cn = new Array();
					var a_id = new Array();
					var i = 0;
					if ($(showid
							+ " .OpenFloatBox .selecteditem :checkbox:checked").length > 8) {
						alert("不能超过8个选项");
						return false;
					}
					$(showid
							+ " .OpenFloatBox .selecteditem :checkbox:checked")
							.each(function(index) {
								a_cn[index] = $(this).attr("title");
								if ($(this).attr("class") == "s") {
									a_id[i] = $(this).val();
								} else {
									a_id[i] = $(this).attr("id") + "."
											+ $(this).val();
								}
								i++;
							});
					$(input_cn).val(scope.limit(a_cn.join("+"), strlen));
					$(input_cn).attr("title", $(input_cn).val());
					$(input_cn2).val(scope.limit(a_cn.join("+"), strlen));
					if ($(input_cn).val() == "")
						$(input_cn).val("全部数据");
					if ($(input_cn2).val() == "")
						$(input_cn2).val("全部数据");
					$(input).val(a_id.join("-"));
					$(input2).val(a_id.join("-"));
					DialogClose(showid);
					//$("#contactUsModal").addClass("modal fade");
				}
			});
		},
		// 设置阴影
		SetBoxBg : function(showid) {
			var FloatBoxWidth = $(showid + " .OpenFloatBox").width();
			var FloatBoxHeight = $(showid + " .OpenFloatBox").height();
			var FloatBoxLeft = $(showid + " .OpenFloatBox").offset().left;
			var FloatBoxTop = $(showid + " .OpenFloatBox").offset().top;
			$(showid + " .OpenFloatBoxBg").css({
						display : "block",
						width : (FloatBoxWidth + 12) + "px",
						height : (FloatBoxHeight + 12) + "px"
					});
			$(showid + " .OpenFloatBoxBg").css({
						left : (FloatBoxLeft - 5) + "px",
						top : (FloatBoxTop - 5) + "px"
					});
		},
		// 生成小类
		MakeLi : function(val, pid) {
			if (val == "")
				return false;
			arr = val.split("|");
			var htmlstr = '';
			for (x in arr) {
				var v = arr[x].split(",");
				htmlstr += "<label><input type=\"checkbox\" value=\"" + v[0]
						+ "\" title=\"" + v[1] + "\" class=\"s\" id=\"" + pid
						+ "\"/>" + v[1] + "</label><br/>";
			}
			return htmlstr;
		},
		// 拷贝
		CopyItem : function(showid) {
			var scope=this;
			var htmlstr = '&nbsp;&nbsp;&nbsp;已经选择分类：<div class=\"btn-group btn-group-sm\"> <button type=\"button\" class=\"empty btn btn-default\">清空已选</button></div><br/><nobr>';
			$(showid + " .item :checkbox:checked[class='b']").each(
					function(index) {
						htmlstr += "<label>"
								+ "      &nbsp;&nbsp;&nbsp;&nbsp;<input class=\"s\"  type=\"checkbox\" value=\""
								+ $(this).attr("value") + "\" title=\""
								+ $(this).attr("title") + "\" checked/>"
								+ $(this).attr("title") + "</label>";
					})
			$(showid + " .item :checkbox:checked[class='s']").each(
					function(index) {
						if ($(this).parent().parent().prev().find(":checkbox")
								.attr('checked') == false) {
							htmlstr += "<label>"
									+ "   <input class=\"s\"  type=\"checkbox\" id=\""
									+ $(this).attr("id") + "\" value=\""
									+ $(this).attr("value") + "\" title=\""
									+ $(this).attr("title") + "\" checked/>"
									+ $(this).attr("title") + "</label>";
						}
					})
			htmlstr += "<div class=\"clear\"></div></nobr>";
			$(showid + " .selecteditem").html(htmlstr);
			if ($(showid + " .item :checkbox:checked").length > 0) {
				$(showid + " .selecteditem").css("display", "block");
			} else {
				$(showid + " .selecteditem").css("display", "none");
			}
			// 已选项目绑定click
			$(showid + " .selecteditem :checkbox").unbind().click(function() {
				var selval = $(this).val();
				$(showid + " .item :checkbox:checked").each(function() {
					if ($(this).val() == selval) {
						$(this).attr("checked", false);
						if ($(this).attr("class") == "b") {
							$(this).parent().next().find(":checkbox").attr(
									"checked", false);
						}
						// 重新克隆
						scope.CopyItem(showid);
					}
				})
			});
			$(showid + " .OpenFloatBox .item label :checkbox").parent().css(
					"color", "");
			$(showid + " .OpenFloatBox .item label :checkbox:checked")
					.parent().css("color", "#FF6600");
			$(showid + " .OpenFloatBox .sitem :checkbox:checked").each(
					function(index) {
						$(this).parent().parent().prev()
								.css("color", "#FF6600");
					});
			this.SetBoxBg(showid);
			// 清空
			$(showid + " .selecteditem .empty").unbind().click(function() {
				$(showid + " .selecteditem").css("display", "none");
				$(showid + " .selecteditem").html("");
				$(showid + " :checkbox:checked").parent().css("color", "");
				$(showid + " :checkbox:checked").parent().parent().prev().css(
						"color", "");
				$(showid + " :checkbox:checked").attr('checked', false);
				scope.SetBoxBg(showid);
			});
		},
		// 截取字符
		limit : function(objString, num) {
			var objLength = objString.length;
			if (objLength > num) {
				return objString.substring(0, num) + "...";
			}
			return objString;
		},
		// 模拟select
		showmenu : function(menuID, showID, inputname) {
			$(menuID).click(function() {
				$(menuID).blur();
				$(menuID).parent("div").css("position", "relative");
				$(showID).slideToggle("fast");
				// 生成背景
				$(menuID).parent("div")
						.before("<div class=\"menu_bg_layer\"></div>");
				$(".menu_bg_layer").height($(document).height());
				$(".menu_bg_layer").css({
							width : $(document).width(),
							position : "absolute",
							left : "0",
							top : "0",
							"z-index" : "0",
							"background-color" : "#ffffff"
						});
				$(".menu_bg_layer").css("opacity", "0");
				// 生成背景结束
				$(showID + " li").click(function() {
							$(menuID).val($(this).attr("title"));
							$(inputname).val($(this).attr("id"));
							$(".menu_bg_layer").hide();
							$(showID).hide();
							$(menuID).parent("div").css("position", "");
							$(this).css("background-color", "");
						});

				$(".menu_bg_layer").click(function() {
							$(".menu_bg_layer").hide();
							$(showID).hide();
							$(menuID).parent("div").css("position", "");
						});
				$(showID + " li").hover(function() {
							$(this).css("background-color", "#DAECF5");
						}, function() {
							$(this).css("background-color", "");

						});
			});
		}

	};
	

	// 扩展jquery原型
	$.fn.provincepicker = function(method) {
		if (methods[method]) {
			// 传递作用于为el $("el").monthpicker传递作用于为 $("el"),所有方法定义到这个元素
			return methods[method].apply(this, Array.prototype.slice.call(
							arguments, 1));
		} else if (typeof method === 'object' || !method) {
			return methods.init.apply(methods, arguments);
		} else {
			$.error('Method ' + method
					+ ' does not exist on jQuery.mtz.monthpicker');
		}
	};

})(jQuery);
